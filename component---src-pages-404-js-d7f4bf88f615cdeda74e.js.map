{"version":3,"file":"component---src-pages-404-js-d7f4bf88f615cdeda74e.js","mappings":"uJA0CA,IA9BuCA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EACnE,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEAG,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,gBACZD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAKR,IAKhBK,EAAAA,cAACE,EAAAA,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACjCR,GAMPK,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBAAiB,oBAAmBJ,GACjDG,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,iBAAiBF,GACnCC,EAAAA,cAAAA,OAAAA,KAAOJ,GACPI,EAAAA,cAAAA,SAAAA,KAAQ,MACH,IAAII,MAAOC,cAAc,iBAAc,qBAAGC,KAAK,4BAA2B,WAE3E,C,gICUV,MA5BiCb,IAAqC,IAApC,YAACc,EAAW,MAAEZ,EAAK,SAAEC,GAAS,EAC5D,MAAM,KAACY,IAAQC,EAAAA,EAAAA,gBAAc,cAavBC,EAAkBH,GAAeC,EAAKG,aAAaJ,YAEzD,OACIP,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAAAA,QAAAA,KAAQL,GACRK,EAAAA,cAAAA,OAAAA,CAAMY,KAAK,cAAcC,QAASH,IAClCV,EAAAA,cAAAA,OAAAA,CAAMc,SAAS,WAAWD,QAASlB,IACnCK,EAAAA,cAAAA,OAAAA,CAAMc,SAAS,iBAAiBD,QAASH,IACzCV,EAAAA,cAAAA,OAAAA,CAAMc,SAAS,UAAUD,QAAQ,YAChCjB,EACF,ECtCX,MAWamB,EAAO,IAAM,gBAAC,EAAG,CAACpB,MAAM,mBAErC,MAbqB,IAAyB,IAAxB,KAAEqB,EAAI,SAAEtB,GAAU,EACtC,MAAMuB,EAAYD,EAAKR,KAAKG,aAAahB,MAEzC,OACE,gBAACuB,EAAA,EAAM,CAACxB,SAAUA,EAAUC,MAAOsB,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/Layout.tsx","webpack://gatsby-starter-blog/./src/components/Seo.tsx","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport {Link} from \"gatsby\"\n\ninterface LayoutProps {\n    location: {\n        pathname: string\n    };\n    title: string,\n    children: React.ReactNode\n}\n\n\nconst Layout : React.FC<LayoutProps> = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n          {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with  <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport {graphql, useStaticQuery} from \"gatsby\"\n\ninterface SeoProps {\n    description: string,\n    title: string,\n    children: React.ReactNode\n}\n\ninterface SiteMetadata {\n    title: string;\n    description: string;\n}\n\ninterface QueryResult {\n    site: {\n        siteMetadata: SiteMetadata;\n    };\n}\n\nconst Seo : React.FC<SeoProps> = ({description, title, children}) => {\n    const {site} = useStaticQuery<QueryResult>(\n        graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n    )\n\n    const metaDescription = description || site.siteMetadata.description\n\n    return (\n        <>\n            <title>{title}</title>\n            <meta name=\"description\" content={metaDescription}/>\n            <meta property=\"og:title\" content={title}/>\n            <meta property=\"og:description\" content={metaDescription}/>\n            <meta property=\"og:type\" content=\"website\"/>\n            {children}\n        </>\n    )\n}\n\nexport default Seo","import * as React from \"react\"\nimport {graphql} from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/Seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","location","title","children","isRootPath","pathname","header","React","className","Link","to","Date","getFullYear","href","description","site","useStaticQuery","metaDescription","siteMetadata","name","content","property","Head","data","siteTitle","Layout"],"sourceRoot":""}