{"version":3,"file":"component---src-pages-index-tsx-4939967e722c122de90a.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/Seo.tsx","webpack://gatsby-starter-blog/./src/components/User/Greetings/Greetings.module.css","webpack://gatsby-starter-blog/./src/components/User/Greetings/Greetings.tsx","webpack://gatsby-starter-blog/./src/components/UI/Divider/Divider.tsx","webpack://gatsby-starter-blog/./src/components/UI/Divider/Divider.module.css","webpack://gatsby-starter-blog/./src/components/UI/Button/Button.tsx","webpack://gatsby-starter-blog/./src/components/UI/Pagination/Pagination.tsx","webpack://gatsby-starter-blog/./src/components/UI/Pagination/Pagination.module.css","webpack://gatsby-starter-blog/./src/components/Blog/Articles.tsx","webpack://gatsby-starter-blog/./src/components/Blog/Articles.module.css","webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\"\nimport {graphql, useStaticQuery} from \"gatsby\"\n\ninterface SeoProps {\n    title: string\n}\n\ninterface SiteMetadata {\n    title: string;\n    description: string;\n}\n\ninterface QueryResult {\n    site: {\n        siteMetadata: SiteMetadata;\n    };\n}\n\nconst Seo : React.FC<SeoProps> = ({title}) => {\n    const {site} = useStaticQuery<QueryResult>(\n        graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n    )\n\n    const metaDescription = site.siteMetadata.description\n\n    return (\n        <>\n            <title>{title}</title>\n            <meta name=\"description\" content={metaDescription}/>\n            <meta property=\"og:title\" content={title}/>\n            <meta property=\"og:description\" content={metaDescription}/>\n            <meta property=\"og:type\" content=\"website\"/>\n        </>\n    )\n}\n\nexport default Seo","// extracted by mini-css-extract-plugin\nexport var accent = \"Greetings-module--accent--70d7a\";\nexport var container = \"Greetings-module--container--cc13c\";\nexport var intro = \"Greetings-module--intro--faec8\";\nexport var link = \"Greetings-module--link--51dd7\";\nexport var name = \"Greetings-module--name--1ef3c\";\nexport var subtitle = \"Greetings-module--subtitle--79070\";\nexport var title = \"Greetings-module--title--ebce8\";","import * as React from \"react\"\nimport {graphql, useStaticQuery} from \"gatsby\"\nimport {StaticImage} from \"gatsby-plugin-image\"\nimport * as styles from \"./Greetings.module.css\"\nimport Paragraph from \"../../UI/Paragraph/Paragraph\";\n\ninterface Author {\n    name: string,\n    linkedin: string,\n    github: string,\n    spotify: string\n}\n\ninterface SiteMetadata {\n    author: Author\n}\n\ninterface SiteData {\n    site: {\n        siteMetadata: SiteMetadata\n    }\n}\n\nconst Greetings: React.FC = () => {\n    const data : SiteData = useStaticQuery(graphql`\n    query IntroQuery {\n      site {\n        siteMetadata {\n          author {\n            name,\n            linkedin,\n            github,\n            spotify\n          }\n        }\n      }\n    }\n  `)\n\n    // Set these values by editing \"siteMetadata\" in gatsby-config.js\n    const author = data.site.siteMetadata?.author\n\n    return (\n        <div className={styles.intro}>\n            <StaticImage\n                className=\"rounded-image\"\n                layout=\"fixed\"\n                formats={[\"auto\", \"webp\", \"avif\"]}\n                src=\"../../../images/profile-pic.jpg\"\n                width={128}\n                height={128}\n                quality={100}\n                alt=\"Profile picture\"\n            />\n            <div className={styles.container}>\n                <h1 className={styles.title}>Hello!<br/></h1>\n                <Paragraph paragraphClass={styles.subtitle}>I am <span className={styles.name}>{author.name}</span></Paragraph>\n\n                <Paragraph>\n                    I am an italian <span className={styles.accent}>software developer</span> based in Milan.<br/>\n                    I strongly believe in good practices and team working.\n                </Paragraph>\n\n                <Paragraph>\n                    My passion for software development dates back to my childhood, when I would spend hours tinkering\n                    with CSS\n                    and HTML to create unique themes for an online forum.\n                    This love propelled me towards a career in software development, which I officially began in 2016.\n                </Paragraph>\n\n                <Paragraph>\n                    I thrive in an environment where teamwork is appreciated and encouraged.\n                    Collaborating with others to exchange ideas, knowledge and even unwind with a refreshing beer, is\n                    what makes\n                    work meaningful and enjoyable to me.\n                </Paragraph>\n\n                <Paragraph>\n                    While writing code I always try to apply some magic tricks which will transform bad code into clean\n                    code.<br/>\n                    My passion lies in keeping things simple.\n                </Paragraph>\n\n                <Paragraph>\n                    If you are interested on my technical skills you can check my <a className={styles.link}\n                                                                                     href={author.linkedin}>LinkedIn</a> profile\n                    or follow me on <a className={styles.link} href={author.github}>Git Hub</a>.\n                </Paragraph>\n\n                <Paragraph>\n                    Although coding is a significant part of my life, I find balance in my diverse passions. <span\n                    className={styles.accent}>Music</span> has always held a special place in my heart, and I eagerly\n                    explore\n                    every\n                    genre.\n                    In my free time I like being a self-taught guitar player, you can find me on <a\n                    className={styles.link}\n                    href={author.spotify}>Spotify</a> sharing\n                    my favorite tunes.\n                    I'm also fascinated by <span className={styles.accent}>photography</span> and love to capture the\n                    beauty\n                    of <span\n                    className={styles.accent}>nature</span> during hikes.\n                </Paragraph>\n            </div>\n        </div>\n    )\n}\n\nexport default Greetings\n","import * as React from \"react\";\nimport * as styles from \"./Divider.module.css\";\n\ninterface DividerProps {\n    label: string;\n}\n\nconst Divider: React.FC<DividerProps> = ({ label }) => {\n    return (\n        <div className={styles.divider}>\n            <div className={styles.dots}>...</div>\n            <span className={styles.label}>{label}</span>\n        </div>\n    );\n};\n\nexport default Divider;\n","// extracted by mini-css-extract-plugin\nexport var divider = \"Divider-module--divider--77633\";\nexport var dots = \"Divider-module--dots--0574e\";\nexport var label = \"Divider-module--label--bff4d\";","import * as React from \"react\";\nimport * as styles from \"./Button.module.css\";\n\ninterface ButtonProps {\n    buttonId: number,\n    label: string,\n    buttonClass: string,\n    onButtonClick: (data: number) => void\n}\n\nconst Button : React.FC<ButtonProps> = ({buttonId, label, buttonClass, onButtonClick}) => {\n\n    const handleButtonClick = (id : number) => onButtonClick(id);\n\n    return (\n        <>\n            <button key={buttonId} className={`${styles.button} ${buttonClass}`}\n                onClick={() => handleButtonClick(buttonId)}>\n                {label}\n            </button>\n        </>\n    )\n}\n\nexport default Button;","import * as React from \"react\";\nimport {useState} from \"react\";\nimport Button from \"../Button/Button\";\nimport * as styles from \"./Pagination.module.css\";\n\ninterface Pages {\n    pages: string[],\n    onButtonClick: (data: number) => void\n}\n\nconst Pagination : React.FC<Pages> = ({pages, onButtonClick}) => {\n    const [currentPage, setCurrentPage] = useState(0);\n\n    const handlePageChange = (page:number) => {\n        setCurrentPage(page);\n\n        onButtonClick(page);\n    }\n\n    return (\n        <>\n            <div className={styles.blogPagination}>\n                {pages.map((v, i) => {\n                    return (\n                        <Button\n                            key={i}\n                            buttonId={i}\n                            buttonClass={i === currentPage ? styles.selected : ''}\n                            label={(i + 1).toString()}\n                            onButtonClick={handlePageChange}\n                        ></Button>\n                    );\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default Pagination;","// extracted by mini-css-extract-plugin\nexport var blogPagination = \"Pagination-module--blog-pagination--3dd76\";\nexport var selected = \"Pagination-module--selected--32bba\";","import * as React from \"react\";\nimport {useState} from \"react\";\nimport {Link} from \"gatsby\";\nimport Pagination from \"..//UI/Pagination/Pagination\";\nimport Paragraph from \"../UI/Paragraph/Paragraph\";\nimport * as styles from \"./Articles.module.css\";\n\ninterface FrontMatter {\n    title: string,\n    date: string,\n    description: string\n}\n\ninterface Article {\n    frontmatter: FrontMatter;\n    fields: {\n        slug: string;\n    };\n    excerpt: string;\n}\n\ninterface ArticlesProps {\n    posts: Array<Article>;\n}\n\nconst Articles: React.FC<ArticlesProps> = ({posts}) => {\n    const [currentPage, setCurrentPage] = useState(0);\n\n    const maxElements = 2;\n    const paginatedPosts = [];\n\n    for (let i = 0; i < posts.length; i += maxElements) {\n        const chunk = posts.slice(i, i + maxElements);\n        paginatedPosts.push(chunk);\n    }\n\n    const handlePageChange = (page: number) => setCurrentPage(page);\n\n    return (\n        <>\n            {paginatedPosts.length === 0 ? (\n                <Paragraph>No posts found :c</Paragraph>\n            ) : (\n                <ol className={styles.postList}>\n                    {paginatedPosts[currentPage].map(post => {\n                        const title = post.frontmatter.title || post.fields.slug;\n\n                        return (\n                            <li key={post.fields.slug}>\n                                <article\n                                    className={styles.postListItem}\n                                    itemScope\n                                    itemType=\"http://schema.org/Article\"\n                                >\n                                    <header className={styles.postListItemHeader}>\n                                        <h2 className={styles.postListItemH2}>\n                                            <Link to={post.fields.slug} itemProp=\"url\">\n                                                <span itemProp=\"headline\">{title}</span>\n                                            </Link>\n                                        </h2>\n                                        <small>{post.frontmatter.date}</small>\n                                    </header>\n                                    <section>\n                                        <p className={styles.postListItemParagraph}\n                                           dangerouslySetInnerHTML={{\n                                               __html: post.frontmatter.description || post.excerpt,\n                                           }}\n                                           itemProp=\"description\"\n                                        />\n                                    </section>\n                                </article>\n                            </li>\n                        );\n                    })}\n\n                    <Pagination\n                        pages={paginatedPosts.map((_, i) => i.toString())}\n                        onButtonClick={handlePageChange}/>\n                </ol>\n            )}\n        </>\n    );\n};\n\nexport default Articles;\n","// extracted by mini-css-extract-plugin\nexport var postList = \"Articles-module--post-list--d370d\";\nexport var postListItem = \"Articles-module--post-list-item--7f36a\";\nexport var postListItemH2 = \"Articles-module--post-list-item-h2--4723a\";\nexport var postListItemHeader = \"Articles-module--post-list-item-header--7ffe8\";\nexport var postListItemParagraph = \"Articles-module--post-list-item-paragraph--f8689\";","import * as React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Greetings from \"../components/User/Greetings/Greetings\";\nimport Divider from \"../components/UI/Divider/Divider\";\nimport Articles from \"../components/Blog/Articles\";\nimport Seo from \"../components/Seo\";\n\ninterface FrontMatter {\n    date: string;\n    title: string;\n    description: string;\n}\n\ninterface Article {\n    excerpt: string;\n    fields: {\n        slug: string;\n    };\n    frontmatter: FrontMatter;\n}\n\ninterface BlogIndexProps {\n    data: {\n        allMarkdownRemark: {\n            nodes: Article[];\n        };\n    };\n    location: Location; // You can use a more specific type if needed\n}\n\nconst Index: React.FC<BlogIndexProps> = ({ data, location }) => {\n    const posts =  data.allMarkdownRemark.nodes;\n\n    return (\n        <Layout location={location} title=\"\">\n            <Greetings />\n            <Divider label={\"Posts\"} />\n            <Articles posts={posts} />\n        </Layout>\n    );\n};\n\nexport default Index;\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\n\nexport const Head = () => <Seo title={\"Hello! I'm Stefano\"}/>\n\nexport const pageQuery = graphql`\n{\n    site {\n        siteMetadata {\n            title\n        }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n        nodes {\n            excerpt\n            fields {\n                slug\n            }\n            frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                description\n            }\n        }\n    }\n}\n`;\n"],"names":["_ref","title","site","useStaticQuery","metaDescription","siteMetadata","description","React","name","content","property","accent","author","_data$site$siteMetada","className","StaticImage","layout","formats","src","width","height","quality","alt","Paragraph","paragraphClass","styles","href","linkedin","github","spotify","label","buttonId","buttonClass","onButtonClick","key","onClick","pages","currentPage","setCurrentPage","useState","handlePageChange","page","map","v","i","Button","toString","posts","paginatedPosts","length","chunk","slice","push","post","frontmatter","fields","slug","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Pagination","_","data","location","allMarkdownRemark","nodes","Layout","Greetings","Divider","Articles","Head","Seo"],"sourceRoot":""}