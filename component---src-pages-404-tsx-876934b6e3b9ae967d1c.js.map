{"version":3,"file":"component---src-pages-404-tsx-876934b6e3b9ae967d1c.js","mappings":"uLAyCA,MAtB4B,KACxB,MAAMA,GAAkBC,EAAAA,EAAAA,gBAAe,cAavC,OACIC,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKC,UClCU,yCDkCuB,cAAW,qBAAGC,KAAMJ,EAAKK,KAAKC,aAAaC,OAAOC,UAAU,YAAY,OAAI,qBAC9GJ,KAAMJ,EAAKK,KAAKC,aAAaC,OAAOE,QAAQ,WACjD,EEWX,MAnCsCC,IAAkC,IAAjC,SAACC,EAAQ,MAAEC,EAAK,SAAEC,GAAS,EAC9D,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbIA,EADAF,EAEIZ,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,gBACVD,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAG,KAAKN,IAKlBV,EAAAA,cAACe,EAAAA,KAAI,CAACd,UAAU,mBAAmBe,GAAG,KACjCN,GAMTV,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBAAiB,oBAAmBW,GAC/CZ,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,iBAAiBa,GACnCd,EAAAA,cAAAA,OAAAA,KAAOW,IAEXX,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAACiB,EAAQ,MACTjB,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,WAAU,MAAG,IAAIiB,MAAOC,cAAc,iBAAc,qBAChEjB,KAAK,4BAA2B,YAEzC,C,+CCEX,IA3BiCM,IAAc,IAAb,MAACE,GAAM,EACrC,MAAM,KAACP,IAAQJ,EAAAA,EAAAA,gBAAc,cAavBqB,EAAkBjB,EAAKC,aAAaiB,YAE1C,OACIrB,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAAAA,QAAAA,KAAQU,GACRV,EAAAA,cAAAA,OAAAA,CAAMsB,KAAK,cAAcC,QAASH,IAClCpB,EAAAA,cAAAA,OAAAA,CAAMwB,SAAS,WAAWD,QAASb,IACnCV,EAAAA,cAAAA,OAAAA,CAAMwB,SAAS,iBAAiBD,QAASH,IACzCpB,EAAAA,cAAAA,OAAAA,CAAMwB,SAAS,UAAUD,QAAQ,YAClC,C,mGCvBX,MAWaE,EAAO,IAAMzB,EAAAA,cAAC0B,EAAAA,EAAG,CAAChB,MAAM,mBAErC,UAbkDF,IAAwB,IAAvB,KAAEV,EAAI,SAAEW,GAAU,EACjE,MAAMkB,EAAY7B,EAAKK,KAAKC,aAAaM,MAEzC,OACIV,EAAAA,cAAC4B,EAAAA,EAAM,CAACnB,SAAUA,EAAUC,MAAOiB,GAC/B3B,EAAAA,cAAAA,KAAAA,KAAI,kBACJA,EAAAA,cAAAA,IAAAA,KAAG,2DACE,C","sources":["webpack://gatsby-starter-blog/./src/components/Contacts/Contacts.tsx","webpack://gatsby-starter-blog/./src/components/Contacts/Contacts.module.css","webpack://gatsby-starter-blog/./src/components/Layout.tsx","webpack://gatsby-starter-blog/./src/components/Seo.tsx","webpack://gatsby-starter-blog/./src/pages/404.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport * as styles from \"./Contacts.module.css\";\n\ninterface Author {\n    linkedin: string,\n    github: string,\n}\n\ninterface SiteMetadata {\n    author: Author\n}\n\ninterface SiteData {\n    site: {\n        siteMetadata: SiteMetadata\n    }\n}\n\nconst Contacts : React.FC = () => {\n    const data : SiteData = useStaticQuery(graphql`\n    query ContactsQuery {\n      site {\n        siteMetadata {\n          author {\n            linkedin,\n            github\n          }\n        }\n      }\n    }\n  `)\n\n    return (\n        <>\n            <div className={styles.contacts__div}>Find me on <a href={data.site.siteMetadata.author.linkedin}>LinkedIn</a> or <a\n                href={data.site.siteMetadata.author.github}>GitHub</a></div>\n        </>\n    )\n}\n\nexport default Contacts;","// extracted by mini-css-extract-plugin\nexport var contacts__div = \"Contacts-module--contacts__div--8d7f6\";","import * as React from \"react\"\nimport {Link} from \"gatsby\"\nimport Contacts from \"./Contacts/Contacts\";\n\ninterface LayoutProps {\n    location: {\n        pathname: string\n    };\n    title: string,\n    children: React.ReactNode\n}\n\n\nconst Layout: React.FC<LayoutProps> = ({location, title, children}) => {\n    const rootPath = `${__PATH_PREFIX__}/`\n    const isRootPath = location.pathname === rootPath\n    let header\n\n    if (isRootPath) {\n        header = (\n            <h1 className=\"main-heading\">\n                <Link to=\"/\">{title}</Link>\n            </h1>\n        )\n    } else {\n        header = (\n            <Link className=\"header-link-home\" to=\"/\">\n                {title}\n            </Link>\n        )\n    }\n\n    return (\n        <>\n            <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n                <header className=\"global-header\">{header}</header>\n                <main>{children}</main>\n            </div>\n            <footer>\n                <Contacts/>\n                <span className=\"credits\">Â© {new Date().getFullYear()}, Built with  <a\n                    href=\"https://www.gatsbyjs.com\">Gatsby</a></span>\n            </footer>\n        </>\n\n    )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport {graphql, useStaticQuery} from \"gatsby\"\n\ninterface SeoProps {\n    title: string\n}\n\ninterface SiteMetadata {\n    title: string;\n    description: string;\n}\n\ninterface QueryResult {\n    site: {\n        siteMetadata: SiteMetadata;\n    };\n}\n\nconst Seo : React.FC<SeoProps> = ({title}) => {\n    const {site} = useStaticQuery<QueryResult>(\n        graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n    )\n\n    const metaDescription = site.siteMetadata.description\n\n    return (\n        <>\n            <title>{title}</title>\n            <meta name=\"description\" content={metaDescription}/>\n            <meta property=\"og:title\" content={title}/>\n            <meta property=\"og:description\" content={metaDescription}/>\n            <meta property=\"og:type\" content=\"website\"/>\n        </>\n    )\n}\n\nexport default Seo","import * as React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Seo from \"../components/Seo\";\n\ninterface SiteMetadata {\n    title: string;\n}\n\ninterface NotFoundPageProps {\n    data: {\n        site: {\n            siteMetadata: SiteMetadata;\n        };\n    };\n    location: Location;\n}\n\nconst NotFoundPage: React.FC<NotFoundPageProps> = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata.title;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <h1>404: Not Found</h1>\n            <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n        </Layout>\n    );\n};\n\nexport const Head = () => <Seo title=\"404: Not Found\" />;\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"names":["data","useStaticQuery","React","className","href","site","siteMetadata","author","linkedin","github","_ref","location","title","children","isRootPath","pathname","header","Link","to","Contacts","Date","getFullYear","metaDescription","description","name","content","property","Head","Seo","siteTitle","Layout"],"sourceRoot":""}