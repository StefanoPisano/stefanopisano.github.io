{"version":3,"file":"component---src-templates-blog-post-js-01ed91932593a0bc04fe.js","mappings":"wNAmEA,MA5C4B,KAAO,IAAD,EAC9B,MAeMA,EAA+B,QAAzB,GAfWC,EAAAA,EAAAA,gBAAe,cAelBC,KAAKC,oBAAY,aAAtBC,EAAwBJ,OAEvC,OACIK,EAAAA,cAAAA,MAAAA,CAAKC,UCzCI,gCD0CLD,EAAAA,cAACE,EAAAA,EAAW,CACRD,UAAU,gBACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,kCACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiB,uBAExBd,aAAM,EAANA,EAAQe,OACLV,EAAAA,cAACW,EAAAA,EAAS,CAACC,eCpDN,qCDqDDZ,EAAAA,cAAAA,IAAAA,CAAGa,KAAMlB,EAAOmB,UACZd,EAAAA,cAAAA,SAAAA,KAASL,EAAOe,OACf,IAAI,SACHf,aAAM,EAANA,EAAQoB,UAAW,KACzBf,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,SAAAA,KAASL,aAAM,EAANA,EAAQqB,QAGvB,E,UEHd,MAtDyB,IAGlB,IAFLC,MAAM,SAAEC,EAAQ,KAAEC,EAAI,KAAEtB,EAAMuB,eAAgBC,GAAM,SACpDC,GACD,EACC,OACE,gBAACC,EAAA,EAAM,CAACD,SAAUA,EAAUE,MAAO,QACjC,2BACEvB,UAAU,YACVwB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYN,EAAKO,YAAYJ,OAC1C,yBAAIH,EAAKO,YAAYC,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQV,EAAKW,MACxCL,SAAS,gBAEX,2BACA,8BACE,gBAAC,EAAS,QAGd,uBAAK1B,UAAU,iBACb,sBACEgC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGpB,GACC,gBAAC,EAAAqB,KAAI,CAACC,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAAO,KACtCzB,EAASU,YAAYJ,QAI9B,0BACGL,GACC,gBAAC,EAAAoB,KAAI,CAACC,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKS,YAAYJ,MAAM,SAM3B,C","sources":["webpack://gatsby-starter-blog/./src/components/User/Signature/Signature.tsx","webpack://gatsby-starter-blog/./src/components/User/Signature/Signature.module.css","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport {StaticImage} from \"gatsby-plugin-image\";\nimport * as styles from \"./Signature.module.css\";\nimport Paragraph from \"../../UI/Paragraph/Paragraph\";\n\ninterface Author {\n    name: string,\n    summary: string,\n    motto: string,\n    linkedin: string\n}\n\ninterface SiteMetadata {\n    author: Author\n}\n\ninterface SiteData {\n    site: {\n        siteMetadata: SiteMetadata\n    };\n}\n\nconst Signature: React.FC = () => {\n    const data: SiteData = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n            motto,\n            linkedin\n          }\n        }\n      }\n    }\n  `);\n\n    const author = data.site.siteMetadata?.author;\n\n    return (\n        <div className={styles.bio}>\n            <StaticImage\n                className=\"rounded-image\"\n                layout=\"fixed\"\n                formats={[\"auto\", \"webp\", \"avif\"]}\n                src=\"../../../images/profile-pic.jpg\"\n                width={50}\n                height={50}\n                quality={95}\n                alt=\"Profile picture\"\n            />\n            {author?.name && (\n                <Paragraph paragraphClass={styles.bioText}>\n                    <a href={author.linkedin}>\n                        <strong>{author.name}</strong>\n                    </a>{\" \"}\n                    is a {author?.summary || null}\n                    <br />\n                    <strong>{author?.motto}</strong>\n                </Paragraph>\n            )}\n        </div>\n    );\n};\n\nexport default Signature;\n","// extracted by mini-css-extract-plugin\nexport var bio = \"Signature-module--bio--f104e\";\nexport var bioText = \"Signature-module--bio-text--62851\";","import * as React from \"react\"\nimport {graphql, Link} from \"gatsby\"\n\nimport Signature from \"../components/User/Signature/Signature\"\nimport Layout from \"../components/Layout\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  return (\n    <Layout location={location} title={\"Home\"}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Signature />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","_data$site$siteMetada","React","className","StaticImage","layout","formats","src","width","height","quality","alt","name","Paragraph","paragraphClass","href","linkedin","summary","motto","data","previous","next","markdownRemark","post","location","Layout","title","itemScope","itemType","itemProp","frontmatter","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}